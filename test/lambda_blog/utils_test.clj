(ns lambda-blog.utils-test
  (:require [clojure.test :refer :all]
            [lambda-blog.utils :refer [pathcat sanitize urlcat]]))

(deftest path-renders-properly
  (is (= (pathcat "")
         "."))
  (is (= (pathcat nil)
         "."))
  (is (= (pathcat nil nil)
         "."))
  (is (= (pathcat "foo")
         "foo"))
  (is (= (pathcat "foo" "bar")
         "foo/bar"))
  (is (= (pathcat "foo" nil "bar")
         "foo/bar"))
  (is (= (pathcat "" "foo")
         "foo"))
  (is (= (pathcat "foo" "bar/baz")
         "foo/bar/baz"))
  (is (= (pathcat "foo/bar" "baz")
         "foo/bar/baz"))
  (is (= (pathcat "foo" "/bar")
         "foo/bar"))
  (is (= (pathcat "/foo" "bar")
         "foo/bar")))

(deftest url-renders-properly
  (is (= (urlcat "https://test.io" "foo")
         "https://test.io/foo"))
  (is (= (urlcat "http://test.io" "foo")
         "http://test.io/foo"))
  (is (= (urlcat "file:///usr/bin" "bash")
         "file:///usr/bin/bash"))
  (is (= (urlcat "https://test.io/" "/some/path/")
         "https://test.io/some/path"))
  (is (= (urlcat "https://test.io" "/some/path/")
         "https://test.io/some/path"))
  (is (= (urlcat "https://test.io/" "some/path/")
         "https://test.io/some/path"))
  (is (= (urlcat "https://test.io" "some/path/")
         "https://test.io/some/path"))
  (is (= (urlcat "https://" "test.io/foo")
         "https://test.io/foo")))

(deftest sanitize-works-properly
  (is (= (sanitize "TeSt")
         "test"))
  (is (= (sanitize "test test")
         "test-test"))
  (is (= (sanitize "test.html")
         "test.html"))
  (is (= (sanitize "λ-blog.html")
         "l-blog.html"))
  (is (= (sanitize "zażółć gęślą jaźń")
         "zazolc-gesla-jazn"))
  (is (= (sanitize "illega$/ch*ract%rs")
         "illega__ch_ract_rs")))
